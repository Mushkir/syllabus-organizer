(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))t(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&t(o)}).observe(document,{childList:!0,subtree:!0});function s(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(i){if(i.ep)return;i.ep=!0;const r=s(i);fetch(i.href,r)}})();var P=Object.defineProperty,k=(l,e,s)=>e in l?P(l,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):l[e]=s,h=(l,e,s)=>(k(l,typeof e!="symbol"?e+"":e,s),s);const _=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,A=/^-?[0-9]\d*$/,G=/^(?=.*[A-Za-z])(?=.*\d).{8,}$/,D=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,q=l=>{let e=l;return typeof l=="string"&&(e=l.trim()),!e},B=l=>_.test(l),z=(l,e)=>l.length>e,H=(l,e)=>l.length<e,K=l=>typeof l!="string"?!1:!isNaN(+l)&&!isNaN(parseFloat(l)),U=l=>A.test(l),J=l=>G.test(l),X=l=>D.test(l),Z=(l,e)=>l>e,W=(l,e)=>l<e,y=l=>typeof l!="string"||l==="";var u=(l=>(l.Required="required",l.Email="email",l.MinLength="minLength",l.MaxLength="maxLength",l.Password="password",l.Number="number",l.Integer="integer",l.MaxNumber="maxNumber",l.MinNumber="minNumber",l.StrongPassword="strongPassword",l.CustomRegexp="customRegexp",l.MinFilesCount="minFilesCount",l.MaxFilesCount="maxFilesCount",l.Files="files",l))(u||{}),V=(l=>(l.Required="required",l))(V||{}),N=(l=>(l.Label="label",l.LabelArrow="labelArrow",l))(N||{});const j=[{key:u.Required,dict:{en:"The field is required"}},{key:u.Email,dict:{en:"Email has invalid format"}},{key:u.MaxLength,dict:{en:"The field must contain a maximum of :value characters"}},{key:u.MinLength,dict:{en:"The field must contain a minimum of :value characters"}},{key:u.Password,dict:{en:"Password must contain minimum eight characters, at least one letter and one number"}},{key:u.StrongPassword,dict:{en:"Password should contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character"}},{key:u.Number,dict:{en:"Value should be a number"}},{key:u.MaxNumber,dict:{en:"Number should be less or equal than :value"}},{key:u.MinNumber,dict:{en:"Number should be more or equal than :value"}},{key:u.MinFilesCount,dict:{en:"Files count should be more or equal than :value"}},{key:u.MaxFilesCount,dict:{en:"Files count should be less or equal than :value"}},{key:u.Files,dict:{en:"Uploaded files have one or several invalid properties (extension/size/type etc)."}}],Y="Value is incorrect",S=l=>typeof l=="object"&&l!==null&&"then"in l&&typeof l.then=="function",Q=l=>{let e=l;const s=[];for(;e;)s.unshift(e),e=e.parentNode;return s},R=(l,e)=>{const s=[...e].reverse();for(let t=0,i=s.length;t<i;++t){const r=s[t];for(const o in l){const a=l[o];if(a.groupElem===r)return[o,a]}}return null},g=l=>Array.isArray(l)?l.filter(e=>e.length>0):typeof l=="string"&&l.trim()?[...l.split(" ").filter(e=>e.length>0)]:[],L=l=>l instanceof Element||l instanceof HTMLDocument,ee=".just-validate-error-label[data-tooltip=true]{position:fixed;padding:4px 8px;background:#423f3f;color:#fff;white-space:nowrap;z-index:10;border-radius:4px;transform:translateY(-5px)}.just-validate-error-label[data-tooltip=true]:before{content:'';width:0;height:0;border-left:solid 5px transparent;border-right:solid 5px transparent;border-bottom:solid 5px #423f3f;position:absolute;z-index:3;display:block;bottom:-5px;transform:rotate(180deg);left:calc(50% - 5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]{transform:translateX(-5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]:before{right:-7px;bottom:auto;left:auto;top:calc(50% - 2px);transform:rotate(90deg)}.just-validate-error-label[data-tooltip=true][data-direction=right]{transform:translateX(5px)}.just-validate-error-label[data-tooltip=true][data-direction=right]:before{right:auto;bottom:auto;left:-7px;top:calc(50% - 2px);transform:rotate(-90deg)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]{transform:translateY(5px)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]:before{right:auto;bottom:auto;left:calc(50% - 5px);top:-5px;transform:rotate(0)}",w=5,I={errorFieldStyle:{color:"#b81111",border:"1px solid #B81111"},errorFieldCssClass:"just-validate-error-field",successFieldCssClass:"just-validate-success-field",errorLabelStyle:{color:"#b81111"},errorLabelCssClass:"just-validate-error-label",successLabelCssClass:"just-validate-success-label",focusInvalidField:!0,lockForm:!0,testingMode:!1,validateBeforeSubmitting:!1,submitFormAutomatically:!1};class te{constructor(e,s,t){h(this,"form",null),h(this,"fields",{}),h(this,"groupFields",{}),h(this,"errors",{}),h(this,"isValid",!1),h(this,"isSubmitted",!1),h(this,"globalConfig",I),h(this,"errorLabels",{}),h(this,"successLabels",{}),h(this,"eventListeners",[]),h(this,"dictLocale",j),h(this,"currentLocale","en"),h(this,"customStyleTags",{}),h(this,"onSuccessCallback"),h(this,"onFailCallback"),h(this,"onValidateCallback"),h(this,"tooltips",[]),h(this,"lastScrollPosition"),h(this,"isScrollTick"),h(this,"fieldIds",new Map),h(this,"getKeyByFieldSelector",i=>this.fieldIds.get(i)),h(this,"getFieldSelectorByKey",i=>{for(const[r,o]of this.fieldIds)if(i===o)return r}),h(this,"getCompatibleFields",()=>{const i={};return Object.keys(this.fields).forEach(r=>{let o=r;const a=this.getFieldSelectorByKey(r);typeof a=="string"&&(o=a),i[o]={...this.fields[r]}}),i}),h(this,"setKeyByFieldSelector",i=>{if(this.fieldIds.has(i))return this.fieldIds.get(i);const r=String(this.fieldIds.size+1);return this.fieldIds.set(i,r),r}),h(this,"refreshAllTooltips",()=>{this.tooltips.forEach(i=>{i.refresh()})}),h(this,"handleDocumentScroll",()=>{this.lastScrollPosition=window.scrollY,this.isScrollTick||(window.requestAnimationFrame(()=>{this.refreshAllTooltips(),this.isScrollTick=!1}),this.isScrollTick=!0)}),h(this,"formSubmitHandler",i=>{i.preventDefault(),this.isSubmitted=!0,this.validateHandler(i)}),h(this,"handleFieldChange",i=>{let r;for(const o in this.fields)if(this.fields[o].elem===i){r=o;break}r&&(this.fields[r].touched=!0,this.validateField(r,!0))}),h(this,"handleGroupChange",i=>{let r;for(const o in this.groupFields)if(this.groupFields[o].elems.find(c=>c===i)){r=o;break}r&&(this.groupFields[r].touched=!0,this.validateGroup(r,!0))}),h(this,"handlerChange",i=>{i.target&&(this.handleFieldChange(i.target),this.handleGroupChange(i.target),this.renderErrors())}),this.initialize(e,s,t)}initialize(e,s,t){if(this.form=null,this.errors={},this.isValid=!1,this.isSubmitted=!1,this.globalConfig=I,this.errorLabels={},this.successLabels={},this.eventListeners=[],this.customStyleTags={},this.tooltips=[],this.currentLocale="en",typeof e=="string"){const i=document.querySelector(e);if(!i)throw Error(`Form with ${e} selector not found! Please check the form selector`);this.setForm(i)}else if(e instanceof HTMLFormElement)this.setForm(e);else throw Error("Form selector is not valid. Please specify a string selector or a DOM element.");if(this.globalConfig={...I,...s},t&&(this.dictLocale=[...t,...j]),this.isTooltip()){const i=document.createElement("style");i.textContent=ee,this.customStyleTags[N.Label]=document.head.appendChild(i),this.addListener("scroll",document,this.handleDocumentScroll)}}getLocalisedString(e,s,t){var i;const r=t??e;let o=(i=this.dictLocale.find(a=>a.key===r))==null?void 0:i.dict[this.currentLocale];if(o||t&&(o=t),o&&s!==void 0)switch(e){case u.MaxLength:case u.MinLength:case u.MaxNumber:case u.MinNumber:case u.MinFilesCount:case u.MaxFilesCount:o=o.replace(":value",String(s))}return o||t||Y}getFieldErrorMessage(e,s){const t=typeof e.errorMessage=="function"?e.errorMessage(this.getElemValue(s),this.fields):e.errorMessage;return this.getLocalisedString(e.rule,e.value,t)}getFieldSuccessMessage(e,s){const t=typeof e=="function"?e(this.getElemValue(s),this.fields):e;return this.getLocalisedString(void 0,void 0,t)}getGroupErrorMessage(e){return this.getLocalisedString(e.rule,void 0,e.errorMessage)}getGroupSuccessMessage(e){if(e.successMessage)return this.getLocalisedString(void 0,void 0,e.successMessage)}setFieldInvalid(e,s){this.fields[e].isValid=!1,this.fields[e].errorMessage=this.getFieldErrorMessage(s,this.fields[e].elem)}setFieldValid(e,s){this.fields[e].isValid=!0,s!==void 0&&(this.fields[e].successMessage=this.getFieldSuccessMessage(s,this.fields[e].elem))}setGroupInvalid(e,s){this.groupFields[e].isValid=!1,this.groupFields[e].errorMessage=this.getGroupErrorMessage(s)}setGroupValid(e,s){this.groupFields[e].isValid=!0,this.groupFields[e].successMessage=this.getGroupSuccessMessage(s)}getElemValue(e){switch(e.type){case"checkbox":return e.checked;case"file":return e.files;default:return e.value}}validateGroupRule(e,s,t){switch(t.rule){case V.Required:s.every(i=>!i.checked)?this.setGroupInvalid(e,t):this.setGroupValid(e,t)}}validateFieldRule(e,s,t,i=!1){const r=t.value,o=this.getElemValue(s);if(t.plugin){t.plugin(o,this.getCompatibleFields())||this.setFieldInvalid(e,t);return}switch(t.rule){case u.Required:{q(o)&&this.setFieldInvalid(e,t);break}case u.Email:{if(y(o))break;B(o)||this.setFieldInvalid(e,t);break}case u.MaxLength:{if(r===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof r!="number"){console.error(`Value for ${t.rule} rule for [${e}] should be a number. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(y(o))break;z(o,r)&&this.setFieldInvalid(e,t);break}case u.MinLength:{if(r===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof r!="number"){console.error(`Value for ${t.rule} rule for [${e}] should be a number. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(y(o))break;H(o,r)&&this.setFieldInvalid(e,t);break}case u.Password:{if(y(o))break;J(o)||this.setFieldInvalid(e,t);break}case u.StrongPassword:{if(y(o))break;X(o)||this.setFieldInvalid(e,t);break}case u.Number:{if(y(o))break;K(o)||this.setFieldInvalid(e,t);break}case u.Integer:{if(y(o))break;U(o)||this.setFieldInvalid(e,t);break}case u.MaxNumber:{if(r===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof r!="number"){console.error(`Value for ${t.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(y(o))break;const a=+o;(Number.isNaN(a)||Z(a,r))&&this.setFieldInvalid(e,t);break}case u.MinNumber:{if(r===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof r!="number"){console.error(`Value for ${t.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(y(o))break;const a=+o;(Number.isNaN(a)||W(a,r))&&this.setFieldInvalid(e,t);break}case u.CustomRegexp:{if(r===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,t);return}let a;try{a=new RegExp(r)}catch{console.error(`Value for ${t.rule} rule for [${e}] should be a valid regexp. This field will be always invalid.`),this.setFieldInvalid(e,t);break}const c=String(o);c!==""&&!a.test(c)&&this.setFieldInvalid(e,t);break}case u.MinFilesCount:{if(r===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof r!="number"){console.error(`Value for ${t.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(Number.isFinite(o==null?void 0:o.length)&&o.length<r){this.setFieldInvalid(e,t);break}break}case u.MaxFilesCount:{if(r===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,t);break}if(typeof r!="number"){console.error(`Value for ${t.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,t);break}if(Number.isFinite(o==null?void 0:o.length)&&o.length>r){this.setFieldInvalid(e,t);break}break}case u.Files:{if(r===void 0){console.error(`Value for ${t.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,t);return}if(typeof r!="object"){console.error(`Value for ${t.rule} rule for [${e}] field should be an object. This field will be always invalid.`),this.setFieldInvalid(e,t);return}const a=r.files;if(typeof a!="object"){console.error(`Value for ${t.rule} rule for [${e}] field should be an object with files array. This field will be always invalid.`),this.setFieldInvalid(e,t);return}const c=(d,n)=>{const f=Number.isFinite(n.minSize)&&d.size<n.minSize,b=Number.isFinite(n.maxSize)&&d.size>n.maxSize,v=Array.isArray(n.names)&&!n.names.includes(d.name),p=Array.isArray(n.extensions)&&!n.extensions.includes(d.name.split(".")[d.name.split(".").length-1]),C=Array.isArray(n.types)&&!n.types.includes(d.type);return f||b||v||p||C};if(typeof o=="object"&&o!==null)for(let d=0,n=o.length;d<n;++d){const f=o.item(d);if(!f){this.setFieldInvalid(e,t);break}if(c(f,a)){this.setFieldInvalid(e,t);break}}break}default:{if(typeof t.validator!="function"){console.error(`Validator for custom rule for [${e}] field should be a function. This field will be always invalid.`),this.setFieldInvalid(e,t);return}const a=t.validator(o,this.getCompatibleFields());if(typeof a!="boolean"&&typeof a!="function"&&console.error(`Validator return value for [${e}] field should be boolean or function. It will be cast to boolean.`),typeof a=="function")if(i)this.fields[e].asyncCheckPending=!0;else{this.fields[e].asyncCheckPending=!1;const c=a();if(!S(c)){console.error(`Validator function for custom rule for [${e}] field should return a Promise. This field will be always invalid.`),this.setFieldInvalid(e,t);return}return c.then(d=>{d||this.setFieldInvalid(e,t)}).catch(()=>{this.setFieldInvalid(e,t)})}a||this.setFieldInvalid(e,t)}}}isFormValid(){let e=!0;for(let s=0,t=Object.values(this.fields).length;s<t;++s){const i=Object.values(this.fields)[s];if(i.isValid===void 0){e=void 0;break}if(i.isValid===!1){e=!1;break}}for(let s=0,t=Object.values(this.groupFields).length;s<t;++s){const i=Object.values(this.groupFields)[s];if(i.isValid===void 0){e=void 0;break}if(i.isValid===!1){e=!1;break}}return e}validateField(e,s=!1){var t;const i=this.fields[e];i.isValid=!0;const r=[];return[...i.rules].reverse().forEach(o=>{const a=this.validateFieldRule(e,i.elem,o,s);S(a)&&r.push(a)}),i.isValid&&this.setFieldValid(e,(t=i.config)==null?void 0:t.successMessage),Promise.allSettled(r).finally(()=>{var o;s&&((o=this.onValidateCallback)==null||o.call(this,{isValid:this.isFormValid(),isSubmitted:this.isSubmitted,fields:this.getCompatibleFields(),groups:{...this.groupFields}}))})}revalidateField(e){if(typeof e!="string"&&!L(e))throw Error("Field selector is not valid. Please specify a string selector or a valid DOM element.");const s=this.getKeyByFieldSelector(e);return!s||!this.fields[s]?(console.error("Field not found. Check the field selector."),Promise.reject()):new Promise(t=>{this.validateField(s,!0).finally(()=>{this.clearFieldStyle(s),this.clearFieldLabel(s),this.renderFieldError(s,!0),t(!!this.fields[s].isValid)})})}revalidateGroup(e){if(typeof e!="string"&&!L(e))throw Error("Group selector is not valid. Please specify a string selector or a valid DOM element.");const s=this.getKeyByFieldSelector(e);return!s||!this.groupFields[s]?(console.error("Group not found. Check the group selector."),Promise.reject()):new Promise(t=>{this.validateGroup(s).finally(()=>{this.clearFieldLabel(s),this.renderGroupError(s,!0),t(!!this.groupFields[s].isValid)})})}validateGroup(e,s=!1){const t=this.groupFields[e],i=[];return[...t.rules].reverse().forEach(r=>{const o=this.validateGroupRule(e,t.elems,r);S(o)&&i.push(o)}),Promise.allSettled(i).finally(()=>{var r;s&&((r=this.onValidateCallback)==null||r.call(this,{isValid:this.isFormValid(),isSubmitted:this.isSubmitted,fields:this.getCompatibleFields(),groups:{...this.groupFields}}))})}focusInvalidField(){for(const e in this.fields){const s=this.fields[e];if(!s.isValid){setTimeout(()=>s.elem.focus(),0);break}}}afterSubmitValidation(e=!1){this.renderErrors(e),this.globalConfig.focusInvalidField&&this.focusInvalidField()}validate(e=!1){return new Promise(s=>{const t=[];Object.keys(this.fields).forEach(i=>{const r=this.validateField(i);S(r)&&t.push(r)}),Object.keys(this.groupFields).forEach(i=>{const r=this.validateGroup(i);S(r)&&t.push(r)}),Promise.allSettled(t).then(()=>{var i;this.afterSubmitValidation(e),(i=this.onValidateCallback)==null||i.call(this,{isValid:this.isFormValid(),isSubmitted:this.isSubmitted,fields:this.getCompatibleFields(),groups:{...this.groupFields}}),s(!!t.length)})})}revalidate(){return new Promise(e=>{this.validateHandler(void 0,!0).finally(()=>{this.globalConfig.focusInvalidField&&this.focusInvalidField(),e(this.isValid)})})}validateHandler(e,s=!1){return this.globalConfig.lockForm&&this.lockForm(),this.validate(s).finally(()=>{var t,i,r;this.globalConfig.lockForm&&this.unlockForm(),this.isValid?((t=this.onSuccessCallback)==null||t.call(this,e),this.globalConfig.submitFormAutomatically&&((i=e==null?void 0:e.currentTarget)==null||i.submit())):(r=this.onFailCallback)==null||r.call(this,this.getCompatibleFields(),this.groupFields)})}setForm(e){this.form=e,this.form.setAttribute("novalidate","novalidate"),this.removeListener("submit",this.form,this.formSubmitHandler),this.addListener("submit",this.form,this.formSubmitHandler)}addListener(e,s,t){s.addEventListener(e,t),this.eventListeners.push({type:e,elem:s,func:t})}removeListener(e,s,t){s.removeEventListener(e,t),this.eventListeners=this.eventListeners.filter(i=>i.type!==e||i.elem!==s)}addField(e,s,t){if(typeof e!="string"&&!L(e))throw Error("Field selector is not valid. Please specify a string selector or a valid DOM element.");let i;if(typeof e=="string"?i=this.form.querySelector(e):i=e,!i)throw Error("Field doesn't exist in the DOM! Please check the field selector.");if(!Array.isArray(s)||!s.length)throw Error("Rules argument should be an array and should contain at least 1 element.");s.forEach(o=>{if(!("rule"in o||"validator"in o||"plugin"in o))throw Error("Rules argument must contain at least one rule or validator property.");if(!o.validator&&!o.plugin&&(!o.rule||!Object.values(u).includes(o.rule)))throw Error(`Rule should be one of these types: ${Object.values(u).join(", ")}. Provided value: ${o.rule}`)});const r=this.setKeyByFieldSelector(e);return this.fields[r]={elem:i,rules:s,isValid:void 0,touched:!1,config:t},this.setListeners(i),(this.isSubmitted||this.globalConfig.validateBeforeSubmitting)&&this.validateField(r),this}removeField(e){if(typeof e!="string"&&!L(e))throw Error("Field selector is not valid. Please specify a string selector or a valid DOM element.");const s=this.getKeyByFieldSelector(e);if(!s||!this.fields[s])return console.error("Field not found. Check the field selector."),this;const t=this.getListenerType(this.fields[s].elem.type);return this.removeListener(t,this.fields[s].elem,this.handlerChange),this.clearErrors(),delete this.fields[s],this}removeGroup(e){if(typeof e!="string")throw Error("Group selector is not valid. Please specify a string selector.");const s=this.getKeyByFieldSelector(e);return!s||!this.groupFields[s]?(console.error("Group not found. Check the group selector."),this):(this.groupFields[s].elems.forEach(t=>{const i=this.getListenerType(t.type);this.removeListener(i,t,this.handlerChange)}),this.clearErrors(),delete this.groupFields[s],this)}addRequiredGroup(e,s,t,i){if(typeof e!="string"&&!L(e))throw Error("Group selector is not valid. Please specify a string selector or a valid DOM element.");let r;if(typeof e=="string"?r=this.form.querySelector(e):r=e,!r)throw Error("Group selector not found! Please check the group selector.");const o=r.querySelectorAll("input"),a=Array.from(o).filter(d=>{const n=R(this.groupFields,Q(d));return n?n[1].elems.find(f=>f!==d):!0}),c=this.setKeyByFieldSelector(e);return this.groupFields[c]={rules:[{rule:V.Required,errorMessage:s,successMessage:i}],groupElem:r,elems:a,touched:!1,isValid:void 0,config:t},o.forEach(d=>{this.setListeners(d)}),this}getListenerType(e){switch(e){case"checkbox":case"select-one":case"file":case"radio":return"change";default:return"input"}}setListeners(e){const s=this.getListenerType(e.type);this.removeListener(s,e,this.handlerChange),this.addListener(s,e,this.handlerChange)}clearFieldLabel(e){var s,t;(s=this.errorLabels[e])==null||s.remove(),(t=this.successLabels[e])==null||t.remove()}clearFieldStyle(e){var s,t,i,r;const o=this.fields[e],a=((s=o.config)==null?void 0:s.errorFieldStyle)||this.globalConfig.errorFieldStyle;Object.keys(a).forEach(d=>{o.elem.style[d]=""});const c=((t=o.config)==null?void 0:t.successFieldStyle)||this.globalConfig.successFieldStyle||{};Object.keys(c).forEach(d=>{o.elem.style[d]=""}),o.elem.classList.remove(...g(((i=o.config)==null?void 0:i.errorFieldCssClass)||this.globalConfig.errorFieldCssClass),...g(((r=o.config)==null?void 0:r.successFieldCssClass)||this.globalConfig.successFieldCssClass))}clearErrors(){var e,s;Object.keys(this.errorLabels).forEach(t=>this.errorLabels[t].remove()),Object.keys(this.successLabels).forEach(t=>this.successLabels[t].remove());for(const t in this.fields)this.clearFieldStyle(t);for(const t in this.groupFields){const i=this.groupFields[t],r=((e=i.config)==null?void 0:e.errorFieldStyle)||this.globalConfig.errorFieldStyle;Object.keys(r).forEach(a=>{i.elems.forEach(c=>{var d;c.style[a]="",c.classList.remove(...g(((d=i.config)==null?void 0:d.errorFieldCssClass)||this.globalConfig.errorFieldCssClass))})});const o=((s=i.config)==null?void 0:s.successFieldStyle)||this.globalConfig.successFieldStyle||{};Object.keys(o).forEach(a=>{i.elems.forEach(c=>{var d;c.style[a]="",c.classList.remove(...g(((d=i.config)==null?void 0:d.successFieldCssClass)||this.globalConfig.successFieldCssClass))})})}this.tooltips=[]}isTooltip(){return!!this.globalConfig.tooltip}lockForm(){const e=this.form.querySelectorAll("input, textarea, button, select");for(let s=0,t=e.length;s<t;++s)e[s].setAttribute("data-just-validate-fallback-disabled",e[s].disabled?"true":"false"),e[s].setAttribute("disabled","disabled"),e[s].style.pointerEvents="none",e[s].style.webkitFilter="grayscale(100%)",e[s].style.filter="grayscale(100%)"}unlockForm(){const e=this.form.querySelectorAll("input, textarea, button, select");for(let s=0,t=e.length;s<t;++s)e[s].getAttribute("data-just-validate-fallback-disabled")!=="true"&&e[s].removeAttribute("disabled"),e[s].style.pointerEvents="",e[s].style.webkitFilter="",e[s].style.filter=""}renderTooltip(e,s,t){var i;const{top:r,left:o,width:a,height:c}=e.getBoundingClientRect(),d=s.getBoundingClientRect(),n=t||((i=this.globalConfig.tooltip)==null?void 0:i.position);switch(n){case"left":{s.style.top=`${r+c/2-d.height/2}px`,s.style.left=`${o-d.width-w}px`;break}case"top":{s.style.top=`${r-d.height-w}px`,s.style.left=`${o+a/2-d.width/2}px`;break}case"right":{s.style.top=`${r+c/2-d.height/2}px`,s.style.left=`${o+a+w}px`;break}case"bottom":{s.style.top=`${r+c+w}px`,s.style.left=`${o+a/2-d.width/2}px`;break}}return s.dataset.direction=n,{refresh:()=>{this.renderTooltip(e,s,t)}}}createErrorLabelElem(e,s,t){const i=document.createElement("div");i.innerHTML=s;const r=this.isTooltip()?t==null?void 0:t.errorLabelStyle:(t==null?void 0:t.errorLabelStyle)||this.globalConfig.errorLabelStyle;return Object.assign(i.style,r),i.classList.add(...g((t==null?void 0:t.errorLabelCssClass)||this.globalConfig.errorLabelCssClass),"just-validate-error-label"),this.isTooltip()&&(i.dataset.tooltip="true"),this.globalConfig.testingMode&&(i.dataset.testId=`error-label-${e}`),this.errorLabels[e]=i,i}createSuccessLabelElem(e,s,t){if(s===void 0)return null;const i=document.createElement("div");i.innerHTML=s;const r=(t==null?void 0:t.successLabelStyle)||this.globalConfig.successLabelStyle;return Object.assign(i.style,r),i.classList.add(...g((t==null?void 0:t.successLabelCssClass)||this.globalConfig.successLabelCssClass),"just-validate-success-label"),this.globalConfig.testingMode&&(i.dataset.testId=`success-label-${e}`),this.successLabels[e]=i,i}renderErrorsContainer(e,s){const t=s||this.globalConfig.errorsContainer;if(typeof t=="string"){const i=this.form.querySelector(t);if(i)return i.appendChild(e),!0;console.error(`Error container with ${t} selector not found. Errors will be rendered as usual`)}return t instanceof Element?(t.appendChild(e),!0):(t!==void 0&&console.error("Error container not found. It should be a string or existing Element. Errors will be rendered as usual"),!1)}renderGroupLabel(e,s,t,i){!i&&this.renderErrorsContainer(s,t)||e.appendChild(s)}renderFieldLabel(e,s,t,i){var r,o,a,c,d,n,f;if(!(!i&&this.renderErrorsContainer(s,t)))if(e.type==="checkbox"||e.type==="radio"){const b=document.querySelector(`label[for="${e.getAttribute("id")}"]`);((o=(r=e.parentElement)==null?void 0:r.tagName)==null?void 0:o.toLowerCase())==="label"?(c=(a=e.parentElement)==null?void 0:a.parentElement)==null||c.appendChild(s):b?(d=b.parentElement)==null||d.appendChild(s):(n=e.parentElement)==null||n.appendChild(s)}else(f=e.parentElement)==null||f.appendChild(s)}showLabels(e,s){Object.keys(e).forEach((t,i)=>{const r=e[t],o=this.getKeyByFieldSelector(t);if(!o||!this.fields[o]){console.error("Field not found. Check the field selector.");return}const a=this.fields[o];a.isValid=!s,this.clearFieldStyle(o),this.clearFieldLabel(o),this.renderFieldError(o,!1,r),i===0&&this.globalConfig.focusInvalidField&&setTimeout(()=>a.elem.focus(),0)})}showErrors(e){if(typeof e!="object")throw Error("[showErrors]: Errors should be an object with key: value format");this.showLabels(e,!0)}showSuccessLabels(e){if(typeof e!="object")throw Error("[showSuccessLabels]: Labels should be an object with key: value format");this.showLabels(e,!1)}renderFieldError(e,s=!1,t){var i,r,o,a,c,d;const n=this.fields[e];if(n.isValid===!1&&(this.isValid=!1),n.isValid===void 0||!s&&!this.isSubmitted&&!n.touched&&t===void 0)return;if(n.isValid){if(!n.asyncCheckPending){const b=this.createSuccessLabelElem(e,t!==void 0?t:n.successMessage,n.config);b&&this.renderFieldLabel(n.elem,b,(i=n.config)==null?void 0:i.errorsContainer,!0),n.elem.classList.add(...g(((r=n.config)==null?void 0:r.successFieldCssClass)||this.globalConfig.successFieldCssClass))}return}n.elem.classList.add(...g(((o=n.config)==null?void 0:o.errorFieldCssClass)||this.globalConfig.errorFieldCssClass));const f=this.createErrorLabelElem(e,t!==void 0?t:n.errorMessage,n.config);this.renderFieldLabel(n.elem,f,(a=n.config)==null?void 0:a.errorsContainer),this.isTooltip()&&this.tooltips.push(this.renderTooltip(n.elem,f,(d=(c=n.config)==null?void 0:c.tooltip)==null?void 0:d.position))}renderGroupError(e,s=!0){var t,i,r,o;const a=this.groupFields[e];if(a.isValid===!1&&(this.isValid=!1),a.isValid===void 0||!s&&!this.isSubmitted&&!a.touched)return;if(a.isValid){a.elems.forEach(n=>{var f,b;Object.assign(n.style,((f=a.config)==null?void 0:f.successFieldStyle)||this.globalConfig.successFieldStyle),n.classList.add(...g(((b=a.config)==null?void 0:b.successFieldCssClass)||this.globalConfig.successFieldCssClass))});const d=this.createSuccessLabelElem(e,a.successMessage,a.config);d&&this.renderGroupLabel(a.groupElem,d,(t=a.config)==null?void 0:t.errorsContainer,!0);return}this.isValid=!1,a.elems.forEach(d=>{var n,f;Object.assign(d.style,((n=a.config)==null?void 0:n.errorFieldStyle)||this.globalConfig.errorFieldStyle),d.classList.add(...g(((f=a.config)==null?void 0:f.errorFieldCssClass)||this.globalConfig.errorFieldCssClass))});const c=this.createErrorLabelElem(e,a.errorMessage,a.config);this.renderGroupLabel(a.groupElem,c,(i=a.config)==null?void 0:i.errorsContainer),this.isTooltip()&&this.tooltips.push(this.renderTooltip(a.groupElem,c,(o=(r=a.config)==null?void 0:r.tooltip)==null?void 0:o.position))}renderErrors(e=!1){if(!(!this.isSubmitted&&!e&&!this.globalConfig.validateBeforeSubmitting)){this.clearErrors(),this.isValid=!0;for(const s in this.groupFields)this.renderGroupError(s);for(const s in this.fields)this.renderFieldError(s)}}destroy(){this.eventListeners.forEach(e=>{this.removeListener(e.type,e.elem,e.func)}),Object.keys(this.customStyleTags).forEach(e=>{this.customStyleTags[e].remove()}),this.clearErrors(),this.globalConfig.lockForm&&this.unlockForm()}refresh(){this.destroy(),this.form?(this.initialize(this.form,this.globalConfig),Object.keys(this.fields).forEach(e=>{const s=this.getFieldSelectorByKey(e);s&&this.addField(s,[...this.fields[e].rules],this.fields[e].config)})):console.error("Cannot initialize the library! Form is not defined")}setCurrentLocale(e){if(typeof e!="string"&&e!==void 0){console.error("Current locale should be a string");return}this.currentLocale=e,this.isSubmitted&&this.validate()}onSuccess(e){return this.onSuccessCallback=e,this}onFail(e){return this.onFailCallback=e,this}onValidate(e){return this.onValidateCallback=e,this}}let x;const se=new Uint8Array(16);function ie(){if(!x&&(x=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!x))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return x(se)}const m=[];for(let l=0;l<256;++l)m.push((l+256).toString(16).slice(1));function re(l,e=0){return m[l[e+0]]+m[l[e+1]]+m[l[e+2]]+m[l[e+3]]+"-"+m[l[e+4]]+m[l[e+5]]+"-"+m[l[e+6]]+m[l[e+7]]+"-"+m[l[e+8]]+m[l[e+9]]+"-"+m[l[e+10]]+m[l[e+11]]+m[l[e+12]]+m[l[e+13]]+m[l[e+14]]+m[l[e+15]]}const oe=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),O={randomUUID:oe};function le(l,e,s){if(O.randomUUID&&!e&&!l)return O.randomUUID();l=l||{};const t=l.random||(l.rng||ie)();if(t[6]=t[6]&15|64,t[8]=t[8]&63|128,e){s=s||0;for(let i=0;i<16;++i)e[s+i]=t[i];return e}return re(t)}const T=document.querySelector("#resourceForm");document.querySelector("#main-element");const F="resourcesData",E=new te(T,{validateBeforeSubmitting:!0});E.addField("#course-title",[{rule:"required"},{rule:"minLength",value:3},{rule:"maxLength",value:30}],{errorLabelCssClass:["form-error"],errorLabelStyle:{color:"#ffb2b2"}});E.addField("#cont-type",[{rule:"required"}],{errorLabelCssClass:["form-error"],errorLabelStyle:{color:"#ffb2b2"}});E.addField("#author",[{rule:"required"}],{errorLabelCssClass:["form-error"],errorLabelStyle:{color:"#ffb2b2"}});E.addField("#content-duration",[{rule:"required"},{rule:"minLength",value:5},{rule:"maxLength",value:5}],{errorLabelCssClass:["form-error"],errorLabelStyle:{color:"#ffb2b2"}});E.addField("#content-notes",[{rule:"required"}],{errorLabelCssClass:["form-error"],errorLabelStyle:{color:"#ffb2b2"}});E.onSuccess(()=>{//! Steps to Get the Values in Form
//! 1. Get the form using FormData()
const l=new FormData(T);l.append("id",le());//! 2. Get the values from form using Object.fromEntries()
const e=Object.fromEntries(l.entries());console.log(e);const s=[];//! 3.Convert into string format
JSON.stringify(e);const t=localStorage.getItem(F),i=JSON.parse(t);t?(i.push(e),localStorage.setItem(F,JSON.stringify(i))):(s.push(e),localStorage.setItem(F,JSON.stringify(s))),M(),$(),T.reset()});M();$();function M(){const l=localStorage.getItem(F),e=JSON.parse(l),s=document.querySelector("#table-body");if(e&&e.length>0){s.innerHTML="";const t=[];let i=1;e.map(r=>{const o=document.createElement("tr");o.classList.add("bg-[#5d5869]","text-[#e1d8cf]","text-center");const a=document.createElement("button"),c=document.createElement("button"),d=document.createElement("td");d.classList.add("p-3"),d.textContent=`#${i++}`,o.append(d);const n=document.createElement("td");n.classList.add("p-3"),n.textContent=r.courseTitle,o.append(n);const f=document.createElement("td");f.classList.add("p-3"),f.textContent=r.contentType,o.append(f);const b=document.createElement("td");b.classList.add("p-3"),b.textContent=r.authorName,o.append(b);const v=document.createElement("td");v.classList.add("p-3"),v.textContent=r.contentDuration,o.append(v);const p=document.createElement("td");p.classList.add("p-3"),p.textContent=r.notes,o.append(p);const C=document.createElement("td");C.classList.add("p-3","text-center","flex","justify-center","items-center","gap-5"),c.innerHTML=`<box-icon
      color="#e1d8cf"
      class="cursor-pointer hover:transition 500 hover:-translate-y-1"
      name="trash"
    ></box-icon>`,a.innerHTML=`<box-icon
      color="#e1d8cf"
      class="cursor-pointer hover:transition 500 hover:-translate-y-1"
      type="solid"
      name="edit"
    ></box-icon>`,C.append(a),C.append(c),c.addEventListener("click",()=>ae(r)),o.append(C),t.push(o)}),t.forEach(r=>s.append(r))}}function ae(l){if(confirm(`As a final verification, would you like to delete ${l.courseTitle} permenantly?`)){const s=localStorage.getItem(F);let t=JSON.parse(s);const i=t.filter(r=>r.id!=l.id);t=i,localStorage.setItem(F,JSON.stringify(t)),console.log(i)}M(),$()}function $(){const l=localStorage.getItem(F),e=JSON.parse(l);e.forEach(r=>{console.log(r.contentType)});const s=document.querySelector("#summary-table-body");let t=1;const i=[];if(e&&e.length>0){s.innerHTML="";const r=e.filter(n=>n.contentType=="video").length,o=e.filter(n=>n.contentType=="pdf").length,a=e.filter(n=>n.contentType=="book").length,c=e.filter(n=>n.contentType=="journal-article").length;[{resourceName:"Book",count:a},{resourceName:"PDF",count:o},{resourceName:"Journal Article",count:c},{resourceName:"Video",count:r}].map(n=>{console.log(n);const f=document.createElement("tr");f.classList.add("bg-tableSecondary","text-textSecondary");const b=document.createElement("td");b.classList.add("p-3"),b.textContent=`#${t++}`,f.append(b);const v=document.createElement("td");v.classList.add("p-3"),v.textContent=n.resourceName,f.append(v);const p=document.createElement("td");p.classList.add("p-3"),n.count<10?p.textContent=`0${n.count}`:p.textContent=n.count,f.append(p),i.push(f)}),i.forEach(n=>s.append(n))}}
